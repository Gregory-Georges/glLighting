#version 400
precision highp float;






//Send world position to fragment
out vec3 vWorldPos;
out vec3 vNormal;



//Retrieve elements from buffer
layout (location = 0) in vec3 inPos;        //Position in vertex buffer
layout (location = 1) in vec2 inTexPos;     //Position of the texture
layout (location = 2) in vec3 inNormal;     //Normal vector



//Transformation matrices
uniform mat4 modl;                          //Model uniform
uniform mat4 view;                          //View uniform
uniform mat4 proj;                          //Projection uniform



//Colors
out vec2 vTexPos;                           //Texture position





void main()
{
    //Send data to fragment
    vTexPos = inTexPos;
    vNormal = inNormal;
    vWorldPos = vec3(modl * vec4(inPos, 1.0));



    //Set the position of the vertex on the screen
    gl_Position = proj * view * vec4(vWorldPos, 1.0);
}
